{"version":3,"sources":["types/FilterStatus.ts","store/index.ts","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["FilterStatus","initialState","selectedTodo","actions","todo","type","payload","selectors","state","store","createStore","action","composeWithDevTools","applyMiddleware","thunk","TodoItem","dispatch","useDispatch","useSelector","id","completed","title","className","classNames","onClick","TodoList","todos","map","TodoFilter","filterByStatus","setFilterByStatus","filterByContent","setFilterByContent","value","onChange","event","target","ACTIVE","COMPLETE","ALL","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","user","setUser","useEffect","userId","href","email","name","stringIncludes","full","part","toLowerCase","includes","App","setTodos","visibleTodos","setVisibleTodos","initialized","setInitialized","filter","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2848eb64.chunk.js","sourcesContent":["export enum FilterStatus {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETE = 'completed',\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport { Todo } from '../types/Todo';\n\ntype SelectTodoAction = {\n  type: 'SELECT_TODO';\n  payload: Todo | null;\n};\n\ntype Action = (\n  SelectTodoAction\n);\n\ntype RootState = {\n  selectedTodo: Todo | null;\n};\n\nconst initialState: RootState = {\n  selectedTodo: null,\n};\n\nconst rootReducer = (state = initialState, action: Action): RootState => {\n  switch (action.type) {\n    case 'SELECT_TODO':\n      return {\n        ...state,\n        selectedTodo: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const actions = {\n  selectTodo: (todo: Todo | null): SelectTodoAction => ({\n    type: 'SELECT_TODO',\n    payload: todo,\n  }),\n};\n\nexport const selectors = {\n  selectedTodo: (state: RootState) => state.selectedTodo,\n};\n\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools( // allows you to use https://github.com/reduxjs/redux-devtools/tree/main/extension#redux-devtools-extension\n    applyMiddleware(thunk),\n  ),\n);\n","import { useDispatch, useSelector } from 'react-redux';\nimport classNames from 'classnames';\n\nimport { Todo } from '../../types/Todo';\nimport { actions, selectors } from '../../store';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoItem: React.FC<Props> = ({ todo }) => {\n  const dispatch = useDispatch();\n  const selectedTodo = useSelector(selectors.selectedTodo);\n\n  const handleSelectTodo = () => dispatch(actions.selectTodo(todo));\n\n  const { id, completed, title } = todo;\n\n  return (\n    <tr data-cy=\"todo\" className=\"\">\n      <td className=\"is-vcentered\">{id}</td>\n      <td className=\"is-vcentered\">\n        {completed && (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n      <td className=\"is-vcentered is-expanded\">\n        <p\n          className={classNames(\n            {\n              'has-text-danger': !completed,\n              'has-text-success': completed,\n            },\n          )}\n        >\n          {title}\n        </p>\n      </td>\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={handleSelectTodo}\n        >\n          <span className=\"icon\">\n            {id === selectedTodo?.id ? (\n              <i className=\"far fa-eye-slash\" />\n            ) : (\n              <i className=\"far fa-eye\" />\n            )}\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import { TodoItem } from '../TodoItem';\n\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {\n        todos.map(todo => (\n          <TodoItem\n            todo={todo}\n            key={todo.id}\n          />\n        ))\n      }\n    </tbody>\n  </table>\n);\n","import { ChangeEvent } from 'react';\nimport { FilterStatus } from '../../types/FilterStatus';\n\ntype Props = {\n  filterByStatus: FilterStatus;\n  setFilterByStatus: (status: FilterStatus) => void;\n  filterByContent: string;\n  setFilterByContent: (search: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  filterByStatus,\n  setFilterByStatus,\n  filterByContent,\n  setFilterByContent,\n}) => {\n  const handleSelect = (event: ChangeEvent<HTMLSelectElement>) => {\n    const status = event.target.value;\n\n    switch (status) {\n      case 'active':\n        setFilterByStatus(FilterStatus.ACTIVE);\n        break;\n      case 'completed':\n        setFilterByStatus(FilterStatus.COMPLETE);\n        break;\n      case 'all':\n      default:\n        setFilterByStatus(FilterStatus.ALL);\n    }\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filterByStatus}\n            onChange={handleSelect}\n          >\n            <option value={FilterStatus.ALL}>All</option>\n            <option value={FilterStatus.ACTIVE}>Active</option>\n            <option value={FilterStatus.COMPLETE}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={filterByContent}\n          onChange={event => (\n            setFilterByContent(event.target.value)\n          )}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {filterByContent && (\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              aria-label=\"Clear search query\"\n              onClick={() => setFilterByContent('')}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\n\nimport { Loader } from '../Loader';\n\nimport { actions, selectors } from '../../store';\n\nimport { getUser } from '../../api';\n\nimport { User } from '../../types/User';\n\nexport const TodoModal: React.FC = () => {\n  const dispatch = useDispatch();\n  const selectedTodo = useSelector(selectors.selectedTodo);\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    if (!selectedTodo) {\n      return;\n    }\n\n    getUser(selectedTodo.userId)\n      .then(setUser);\n  }, [selectedTodo]);\n\n  const handleCloseTodo = () => dispatch(actions.selectTodo(null));\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user || !selectedTodo ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.id}`}\n            </div>\n\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              aria-label=\"Select todo\"\n              onClick={handleCloseTodo}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {\n                selectedTodo.completed ? (\n                  <strong className=\"has-text-success\">Done</strong>\n                ) : (\n                  <strong className=\"has-text-danger\">Planned</strong>\n                )\n              }\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nimport { getTodos } from './api';\n\nimport { selectors } from './store';\n\nimport { Todo } from './types/Todo';\nimport { FilterStatus } from './types/FilterStatus';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nconst stringIncludes = (full: string, part: string) => (\n  full.toLowerCase().includes(part.toLowerCase())\n);\n\nexport const App: React.FC = () => {\n  const selectedTodo = useSelector(selectors.selectedTodo);\n\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>([]);\n  const [initialized, setInitialized] = useState(false);\n  const [\n    filterByStatus,\n    setFilterByStatus,\n  ] = useState<FilterStatus>(FilterStatus.ALL);\n  const [\n    filterByContent,\n    setFilterByContent,\n  ] = useState('');\n\n  useEffect(() => {\n    getTodos()\n      .then(setTodos)\n      .then(() => setInitialized(true));\n  }, []);\n\n  useEffect(() => {\n    switch (filterByStatus) {\n      case FilterStatus.COMPLETE:\n        setVisibleTodos(\n          todos\n            .filter(todo => todo.completed)\n            .filter(todo => stringIncludes(todo.title, filterByContent)),\n        );\n        break;\n      case FilterStatus.ACTIVE:\n        setVisibleTodos(\n          todos\n            .filter(todo => !todo.completed)\n            .filter(todo => stringIncludes(todo.title, filterByContent)),\n        );\n        break;\n      case FilterStatus.ALL:\n      default:\n        setVisibleTodos(\n          todos\n            .filter(todo => stringIncludes(todo.title, filterByContent)),\n        );\n    }\n  }, [todos, filterByStatus, filterByContent]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filterByStatus={filterByStatus}\n                setFilterByStatus={setFilterByStatus}\n                filterByContent={filterByContent}\n                setFilterByContent={setFilterByContent}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!initialized ? (\n                <Loader />\n              ) : (\n                <TodoList todos={visibleTodos} />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './store';\nimport { App } from './App';\n\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}